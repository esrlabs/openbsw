name: Build S32k and posix platform

on: [workflow_call, push, pull_request]

jobs:
  run-command:
    runs-on: ubuntu-latest
    strategy:
     matrix:
        platform: [posix, s32k148]
        compiler: [clang, gcc]
        cpp-standard: [14, 17, 20, 23]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache CMake files
        id: cache-cmake
        uses: actions/cache@v3
        with:
          path: cmake-build-${{ matrix.platform }}-${{ matrix.compiler }}
          key: ${{ runner.os }}-cmake-${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.cpp-standard }}-${{ hashFiles('**/*.cpp', '**/*.h',  '**/*.cmake', '**/*.txt', '**/*.c', '**/*.s') }}
          restore-keys: |
            ${{ runner.os }}-cmake-${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.cpp-standard }}-

      - name: Build the docker image
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: |
          docker build -f docker/Dockerfile.dev -t dev .

      - name: Run the build.py inside the docker container
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: |
          docker run --rm -v "$PWD:/home/jenkins" -w /home/jenkins --user $(id -u):4996 dev python3 .ci/build.py "${{ matrix.platform }}" "${{ matrix.compiler }}" "${{ matrix.cpp-standard }}"
      
      - name: Set commit hash and metadata
        if: steps.cache-cmake.outputs.cache-hit != 'true' && matrix.platform == 's32k148' && matrix.compiler == 'gcc' && matrix.cpp-standard == '14'
        id: vars
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=elf-s32k148-${{ matrix.compiler }}-gdwarf4-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Find ELF files
        if: steps.cache-cmake.outputs.cache-hit != 'true' && matrix.platform == 's32k148' && matrix.compiler == 'gcc' && matrix.cpp-standard == '14'
        run: |
          mkdir -p elf-artifacts
          cp cmake-build-s32k148-${{ matrix.compiler }}-gdwarf4/application/*.elf elf-artifacts/

      - name: Upload ELF as GitHub Artifact
        if: steps.cache-cmake.outputs.cache-hit != 'true' && matrix.platform == 's32k148'  && matrix.compiler == 'gcc' && matrix.cpp-standard == '14'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: elf-artifacts/*.elf
